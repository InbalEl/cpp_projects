/***********************   PREPROCESSOR DIRECTIVES   *************************/
#include "shapes_factory.hpp"
/*****************************   ilrd::rd90   ********************************/
namespace ilrd {
namespace rd90 {
/*****************************   Class Shape   *******************************/

Shape::Shape(int x, int y)
{
   moveTo(x, y);
}

/*----------------------------------------------------------------------------*/

int Shape::getX() 
{ 
    return (m_x);
}

/*----------------------------------------------------------------------------*/

int Shape::getY() 
{ 
    return (m_y); 
}

/*----------------------------------------------------------------------------*/

void Shape::setX(int new_x) 
{ 
    m_x = new_x; 
}

/*----------------------------------------------------------------------------*/

void Shape::setY(int new_y) 
{ 
    m_y = new_y;
}

/*----------------------------------------------------------------------------*/

void Shape::moveTo(int new_x, int new_y) 
{
   setX(new_x);
   setY(new_y);
}

/*----------------------------------------------------------------------------*/

void Shape::rMoveTo(int x_delta, int y_delta) 
{
   moveTo(getX() + x_delta, getY() + y_delta);
}

/*----------------------------------------------------------------------------*/

void Shape::draw() 
{}

/*****************************  Class Rectangle  *****************************/

Rectangle::Rectangle(int x, int y, int width, int height)
 : Shape(x, y), m_width(width), m_height(height) {}

/*---------------------------------------------------------------------------*/

int Rectangle::getWidth()
{
    return (m_width);
}

/*---------------------------------------------------------------------------*/

int Rectangle::getHeight()
{
    return (m_height);
}

/*---------------------------------------------------------------------------*/

void Rectangle::setWidth(int new_width)
{
    m_width = new_width;
}

/*---------------------------------------------------------------------------*/

void Rectangle::setHeight(int new_height)
{
    m_height = new_height;
}

/*---------------------------------------------------------------------------*/

void Rectangle::draw()
{}

/******************************  Class Circle  *******************************/

Circle::Circle(int x, int y, int radius)
 : Shape(x, y), m_radius(radius) {}

/*---------------------------------------------------------------------------*/

int Circle::getRadius()
{
    return (m_radius);
}

/*---------------------------------------------------------------------------*/

void Circle::setRadius(int new_radius)
{
    m_radius = new_radius;
}

/*---------------------------------------------------------------------------*/

void Circle::draw()
{}

/*******************************  ilrd::rd90  ********************************/
} // namespace rd90
} // namespace ilrd
/*****************************************************************************/